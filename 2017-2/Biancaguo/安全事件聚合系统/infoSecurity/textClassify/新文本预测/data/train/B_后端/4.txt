模块化是 Java 9 一个非常重要的特性，终于有时间整理一下这方面的内容了。

模块化是软件工程中非常重要的一个概念。把独立的功能封装成模块，并提供接口供外部使用是我们在开发中努力实现的目标。模块化有很多好处：

代码内聚，容易维护；
能够有效降低复杂度；
能提供更好的伸缩性和扩展性。
Java 9 的 Jigsaw 项目致力于为 Java 9 带来平台级的模块化系统。这个项目从 2008 年就已经开始，由于很多原因一直没有发布。现在，Jigsaw 涵盖了 6 个 JEP，终于作为 Java 9 的一部分发布出来。

从整体到模块
Java 一直坚持向后兼容，每更新一个版本，都变得更大更复杂。在过去的 JDK 版本中，没有强制要求模块化，使得 Java 平台和 JDK 越来越让人纠结。即便只是一个小小的 hello world，也需要加载几乎所有的 API。Jigsaw 项目致力于把 Java 平台和 JDK 分解成更小更有组织的模块。用户可以使用模块来构建软件，并且不需要包含所有的 API。

这项工作并不容易，Oracle 的 Java 平台组首席架构师 Mark Reinhold 曾经说过：

JDK代码库在API和实现级别上都是相互关联的，多年来主要以单片软件系统的方式构建。我们花了相当多的努力消除或至少简化了尽可能多的API和实现依赖关系，以便平台和它的实现可以作为一组相互依赖的模块来呈现，但是一些特别棘手的情况仍然存在。我们希望尽可能多地保持与先前版本的兼容性，特别是对于现有的基于类路径的应用程序，同时在可能的情况下，对于由模块组成的应用程序也是如此。


所有 Java 9 模块都在 $JAVA_HOME/jmods 目录下面。每个模块都具有暴露给其他模块的接口。这些模块互相依赖，并通过导出的包进行交互。 开发人员可以编译、打包、部署和执行仅由所选模块组成的应用程序，而无需其他任何操作。